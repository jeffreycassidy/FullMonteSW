ifndef BOOST_INCLUDE
	BOOST_INCLUDE=/usr/local/include
endif

ifndef BOOST_LIB
	BOOST_LIB=/usr/local/lib/boost
endif

ifndef VTK_INCLUDE
	VTK_INCLUDE=/usr/local/include/vtk
endif

ifndef VTK_LIB
	VTK_LIB=/usr/local/lib
endif

ifndef CXX
	CXX=g++
endif

ifndef SWIG
	SWIG=swig
endif

ifndef SOURCE_ROOT
	SOURCE_ROOT=/Users/jcassidy/src/FullMonteSW
endif

ifndef LIB_ROOT
	LIB_ROOT=/Users/jcassidy/src/FullMonteSW/FullMonte
endif

ifndef ANTLR_DIR
	ANTLR_DIR=/usr/local/antlr3c-3.4
endif

ifndef ANTLR_INCLUDE
	ANTLR_INCLUDE=$(ANTLR_DIR)/include
endif

ifndef ANTLR_LIB
	ANTLR_LIB=$(ANTLR_DIR)/lib
endif

ifndef ANTLR
ANTLR=java -jar /usr/local/antlrv3/antlr-3.5.2-complete-no-st3.jar
endif

ifndef TCL_LIB
TCL_LIB=/usr/local/lib
endif


CXX_OPTS=-Wall -std=c++11 -O3 -g -Wno-missing-braces -mavx -msse4 -fPIC -fabi-version=6 -I$(SOURCE_ROOT) -L$(LIB_ROOT)
CXX_LIB_OPTS=-Wall -fabi-version=6 -mavx -msse4 -fPIC -shared -L$(LIB_ROOT)

# Check for Mac OS (no POSIX timer among other things)
OS:=$(shell uname)
ifeq ($(OS),Darwin)
	CXX_OPTS += -DPLATFORM_DARWIN -Wa,-q
endif

%.o: %.cpp *.hpp
	$(CXX) $(CXX_OPTS) -c $<

defaultclean:
	rm -rf *.so *.a *_wrap.cxx *.o
	
# allow each folder to override the make clean command
clean:
	rm -rf *.so *.a *_wrap.cxx *.o a.out
	