PROJECT(FullMonte)
CMAKE_MINIMUM_REQUIRED(VERSION 3.1)

SET(ANTLR_JAR "/usr/local/antlrv3/antlr-3.5.2-complete-no-st3.jar" CACHE PATH "Jar-file for ANTLR3")
SET(ANTLR3_LIBRARIES antlr3c)
SET(ANTLR3_INCLUDE_DIR "/usr/local/antlr3c-3.4/include" CACHE PATH "ANTLR3 include path")
SET(ANTLR3_LIB_DIR "/usr/local/lib" CACHE PATH "ANTLR3 C runtime path")

SET(CMAKE_CXX_STANDARD 11)

CONFIGURE_FILE(tclmonte.in VTK/_tclmonte)
FILE(COPY ${CMAKE_BINARY_DIR}/VTK/_tclmonte DESTINATION ${CMAKE_BINARY_DIR} FILE_PERMISSIONS OWNER_EXECUTE OWNER_READ)
FILE(RENAME ${CMAKE_BINARY_DIR}/_tclmonte ${CMAKE_BINARY_DIR}/tclmonte)

FILE(COPY tlt.tcl DESTINATION ${CMAKE_BINARY_DIR})

## Architecture switches
SET(ARCH avx CACHE STRING "Architecture flag for -m option")

IF(${ARCH} MATCHES "avx")
    ADD_DEFINITIONS(-DUSE_AVX)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mavx")
ENDIF()


IF(${CMAKE_CXX_COMPILER_ID} MATCHES "GNU")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fabi-version=6 -Wno-psabi")
ENDIF()

## Include and link dirs for FullMonte
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/..)
LINK_DIRECTORIES(${CMAKE_SOURCE_DIR})

## Wrapping options
OPTION(WRAP_TCL ON)
OPTION(WRAP_VTK ON)

IF(WRAP_TCL)
    FIND_PACKAGE(SWIG REQUIRED)
    INCLUDE(${SWIG_USE_FILE})

	FIND_PACKAGE(TCL REQUIRED)
    FIND_PACKAGE(TclStub REQUIRED)
    ADD_DEFINITIONS(-DUSE_TCL_STUBS)
	INCLUDE_DIRECTORIES(${TCL_INCLUDE_PATH})
ENDIF()


FIND_PACKAGE(Boost REQUIRED COMPONENTS unit_test_framework serialization system program_options)

INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
LINK_DIRECTORIES(${Boost_LIBRARY_DIR})

ADD_SUBDIRECTORY(SFMT)
ADD_SUBDIRECTORY(Geometry)
ADD_SUBDIRECTORY(Storage)
ADD_SUBDIRECTORY(Kernels)
ADD_SUBDIRECTORY(OutputTypes)
ADD_SUBDIRECTORY(VTK)
